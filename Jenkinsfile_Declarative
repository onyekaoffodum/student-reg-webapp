@Library('JenkinsSharedLib') _
pipeline {
    agent any
    
    triggers {
  githubPush()
}
    
    options {
  buildDiscarder logRotator(numToKeepStr: '5')
  disableConcurrentBuilds()
  timeout(time: 10, unit: 'MINUTES' )
}

    environment {
        SONARQUBE_TOKEN = credentials('SonarQubeToken')
        TomcatserverSSHUserName = 'ec2-user'
        TomcatSystemIP = '3.93.189.91'
        CATALINA_HOME = '/opt/tomcat'
    }

    tools {
        maven 'Maven-3.9.11'
    }

    stages {
        stage("Git Clone") {
            steps {
                git branch: 'development', credentialsId: 'GitHub_Credentials', url: 'https://github.com/onyekaoffodum/student-reg-webapp.git'
            }
        }

        stage("Maven Build") {
            steps {
                mavenBuild ()
            }
        }

        stage("Sonar Scan") {
            steps {
                sh "mvn clean verify sonar:sonar -Dsonar.token=${SONARQUBE_TOKEN}"
            }
        }

        stage("Upload Artifact to Nexus") {
            steps {
                sh 'mvn clean deploy'
            }
        }

        stage("Deploy WAR to Tomcat") {
            steps {
                sshagent(['TomcatServer_SSH_Credential']) {
                    sh """
                        echo "Stopping Tomcat on remote server..."
                        ssh -o StrictHostKeyChecking=no ${TomcatserverSSHUserName}@${TomcatSystemIP} 'sudo ${CATALINA_HOME}/bin/shutdown.sh || true'
                        sleep 20

                        echo "Removing old WAR (ignore if missing)..."
                        ssh -o StrictHostKeyChecking=no ${TomcatserverSSHUserName}@${TomcatSystemIP} 'rm -f /opt/tomcat/webapps/student-reg-webapp.war || true'

                        echo "Copying new WAR file..."
                        scp -o StrictHostKeyChecking=no target/student-reg-webapp.war ${TomcatserverSSHUserName}@${TomcatSystemIP}:/tmp/student-reg-webapp.war

                        echo "Moving WAR to Tomcat webapps folder..."
                        ssh -o StrictHostKeyChecking=no ${TomcatserverSSHUserName}@${TomcatSystemIP} 'sudo mv /tmp/student-reg-webapp.war /opt/tomcat/webapps/student-reg-webapp.war && sudo chown ec2-user:ec2-user /opt/tomcat/webapps/student-reg-webapp.war'

                        echo "Starting Tomcat..."
                        ssh -o StrictHostKeyChecking=no ${TomcatserverSSHUserName}@${TomcatSystemIP} 'sudo ${CATALINA_HOME}/bin/startup.sh'
                    """
                }
            }
        }
    }
    post {
        always {
            sendEmailNotifications(currentBuild.currentResult,"sandieji@rocketmail.com")
            sendSlack(currentBuild.currentResult,"#lic-app-team")  
            cleanWs()
        }    
    }
}


def sendSlack(String buildStatus,String channel) {
    def color = buildStatus == 'SUCCESS' ? 'good' : (buildStatus == 'UNSTABLE' ? 'warning' : 'danger')
    def message = "*${buildStatus}*: Job `${env.JOB_NAME}` - Build #${env.BUILD_NUMBER} \n" +
                  "Details: ${env.BUILD_URL}console"
    slackSend(channel: channel, color: color, message: message)
}

    